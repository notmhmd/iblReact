{
  "version": 3,
  "sources": ["../../@mui/joy/LinearProgress/LinearProgress.js", "../../@mui/joy/LinearProgress/linearProgressClasses.js"],
  "sourcesContent": ["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"color\", \"size\", \"variant\", \"thickness\", \"determinate\", \"value\", \"style\", \"slots\", \"slotProps\"];\nlet _ = t => t,\n  _t,\n  _t2;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { css, keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport useSlot from '../utils/useSlot';\nimport { resolveSxValue } from '../styles/styleUtils';\n\n// TODO: replace `left` with `inset-inline-start` in the future to work with writing-mode. https://caniuse.com/?search=inset-inline-start\n//       replace `width` with `inline-size`, not sure why inline-size does not work with animation in Safari.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst progressKeyframe = keyframes(_t || (_t = _`\n  0% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  25% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  50% {\n    left: var(--_LinearProgress-progressLeft);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n\n  75% {\n    width: var(--LinearProgress-progressMaxWidth);\n  }\n\n  100% {\n    left: var(--_LinearProgress-progressInset);\n    width: var(--LinearProgress-progressMinWidth);\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    determinate,\n    color,\n    variant,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', determinate && 'determinate', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, {});\n};\nconst LinearProgressRoot = styled('div', {\n  name: 'JoyLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  ownerState,\n  theme\n}) => {\n  var _theme$variants, _theme$variants$solid, _theme$variants$softH, _theme$variants$solid2;\n  return _extends({\n    // public variables\n    '--LinearProgress-radius': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressThickness': 'var(--LinearProgress-thickness)',\n    '--LinearProgress-progressRadius': 'max(var(--LinearProgress-radius) - var(--_LinearProgress-padding), min(var(--_LinearProgress-padding) / 2, var(--LinearProgress-radius) / 2))'\n  }, ownerState.size === 'sm' && {\n    '--LinearProgress-thickness': '4px'\n  }, ownerState.size === 'md' && {\n    '--LinearProgress-thickness': '6px'\n  }, ownerState.size === 'lg' && {\n    '--LinearProgress-thickness': '8px'\n  }, ownerState.thickness && {\n    '--LinearProgress-thickness': `${ownerState.thickness}px`\n  }, !ownerState.determinate && {\n    '--LinearProgress-progressMinWidth': 'calc(var(--LinearProgress-percent) * 1% / 2)',\n    '--LinearProgress-progressMaxWidth': 'calc(var(--LinearProgress-percent) * 1%)',\n    '--_LinearProgress-progressLeft': 'calc(100% - var(--LinearProgress-progressMinWidth) - var(--_LinearProgress-progressInset))',\n    '--_LinearProgress-progressInset': 'calc(var(--LinearProgress-thickness) / 2 - var(--LinearProgress-progressThickness) / 2)'\n  }, {\n    minBlockSize: 'var(--LinearProgress-thickness)',\n    boxSizing: 'border-box',\n    borderRadius: 'var(--LinearProgress-radius)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    padding: 'var(--_LinearProgress-padding)',\n    position: 'relative'\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {\n    '--_LinearProgress-padding': 'max((var(--LinearProgress-thickness) - 2 * var(--variant-borderWidth, 0px) - var(--LinearProgress-progressThickness)) / 2, 0px)',\n    '&::before': {\n      content: '\"\"',\n      display: 'block',\n      boxSizing: 'inherit',\n      blockSize: 'var(--LinearProgress-progressThickness)',\n      borderRadius: 'var(--LinearProgress-progressRadius)',\n      backgroundColor: 'currentColor',\n      color: 'inherit',\n      position: 'absolute' // required to make `left` animation works.\n    }\n  }, ownerState.variant === 'soft' && {\n    backgroundColor: theme.variants.soft.neutral.backgroundColor,\n    color: (_theme$variants$solid = theme.variants.solid) == null ? void 0 : _theme$variants$solid[ownerState.color].backgroundColor\n  }, ownerState.variant === 'solid' && {\n    backgroundColor: (_theme$variants$softH = theme.variants.softHover) == null ? void 0 : _theme$variants$softH[ownerState.color].backgroundColor,\n    color: (_theme$variants$solid2 = theme.variants.solid) == null ? void 0 : _theme$variants$solid2[ownerState.color].backgroundColor\n  });\n}, ({\n  ownerState\n}) => ownerState.determinate ? {\n  '&::before': {\n    left: 'var(--_LinearProgress-padding)',\n    inlineSize: 'calc(var(--LinearProgress-percent) * 1% - 2 * var(--_LinearProgress-padding))'\n  }\n} : css(_t2 || (_t2 = _`\n          &::before {\n            animation: ${0}\n              var(--LinearProgress-circulation, 2.5s ease-in-out 0s infinite normal none running);\n          }\n        `), progressKeyframe), ({\n  ownerState,\n  theme\n}) => {\n  const {\n    borderRadius,\n    height\n  } = resolveSxValue({\n    theme,\n    ownerState\n  }, ['borderRadius', 'height']);\n  return _extends({}, borderRadius !== undefined && {\n    '--LinearProgress-radius': borderRadius\n  }, height !== undefined && {\n    '--LinearProgress-thickness': height\n  });\n});\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n *\n * Demos:\n *\n * - [Linear Progress](https://mui.com/joy-ui/react-linear-progress/)\n *\n * API:\n *\n * - [LinearProgress API](https://mui.com/joy-ui/api/linear-progress/)\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyLinearProgress'\n  });\n  const {\n      children,\n      className,\n      component,\n      color = 'primary',\n      size = 'md',\n      variant = 'soft',\n      thickness,\n      determinate = false,\n      value = determinate ? 0 : 25,\n      // `25` is the 1/4 of the bar.\n      style,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    size,\n    variant,\n    thickness,\n    value,\n    determinate,\n    instanceSize: inProps.size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: LinearProgressRoot,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: _extends({\n      as: component,\n      role: 'progressbar',\n      style: _extends({}, {\n        '--LinearProgress-percent': value\n      }, style)\n    }, typeof value === 'number' && determinate && {\n      'aria-valuenow': Math.round(value)\n    })\n  });\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The boolean to select a variant.\n   * Use indeterminate when there is no progress value.\n   * @default false\n   */\n  determinate: PropTypes.bool,\n  /**\n   * The size of the component.\n   * It accepts theme values between 'sm' and 'lg'.\n   * @default 'md'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['sm', 'md', 'lg']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the bar.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   *\n   * @default determinate ? 0 : 25\n   */\n  value: PropTypes.number,\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'soft'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\nexport default LinearProgress;", "import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'determinate', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorSuccess', 'colorWarning', 'colorContext', 'sizeSm', 'sizeMd', 'sizeLg', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid']);\nexport default linearProgressClasses;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAKA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AAEAA;;;ACZO,SAAS,8BAA8B,MAAM;AAClD,SAAO,qBAAqB,qBAAqB,IAAI;AACvD;AACA,IAAM,wBAAwB,uBAAuB,qBAAqB,CAAC,QAAQ,eAAe,gBAAgB,gBAAgB,eAAe,gBAAgB,gBAAgB,gBAAgB,UAAU,UAAU,UAAU,gBAAgB,mBAAmB,eAAe,cAAc,CAAC;AAChS,IAAO,gCAAQ;;;ADiBf,yBAA4B;AAlB5B,IAAM,YAAY,CAAC,YAAY,aAAa,aAAa,SAAS,QAAQ,WAAW,aAAa,eAAe,SAAS,SAAS,SAAS,WAAW;AACvJ,IAAI,IAAI,OAAK;AAAb,IACE;AADF,IAEE;AAgBF,IAAM,mBAAmB,UAAU,OAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuB7C;AACF,IAAM,oBAAoB,gBAAc;AACtC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,QAAQ;AAAA,IACZ,MAAM,CAAC,QAAQ,eAAe,eAAe,SAAS,QAAQ,WAAW,KAAK,CAAC,IAAI,WAAW,UAAU,WAAW,OAAO,CAAC,IAAI,QAAQ,OAAO,WAAW,IAAI,CAAC,EAAE;AAAA,EAClK;AACA,SAAO,eAAe,OAAO,+BAA+B,CAAC,CAAC;AAChE;AACA,IAAM,qBAAqB,eAAO,OAAO;AAAA,EACvC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,mBAAmB,CAAC,OAAO,WAAW,OAAO;AAC/C,CAAC,EAAE,CAAC;AAAA,EACF;AAAA,EACA;AACF,MAAM;AACJ,MAAI,iBAAiB,uBAAuB,uBAAuB;AACnE,SAAO,SAAS;AAAA;AAAA,IAEd,2BAA2B;AAAA,IAC3B,sCAAsC;AAAA,IACtC,mCAAmC;AAAA,EACrC,GAAG,WAAW,SAAS,QAAQ;AAAA,IAC7B,8BAA8B;AAAA,EAChC,GAAG,WAAW,SAAS,QAAQ;AAAA,IAC7B,8BAA8B;AAAA,EAChC,GAAG,WAAW,SAAS,QAAQ;AAAA,IAC7B,8BAA8B;AAAA,EAChC,GAAG,WAAW,aAAa;AAAA,IACzB,8BAA8B,GAAG,WAAW,SAAS;AAAA,EACvD,GAAG,CAAC,WAAW,eAAe;AAAA,IAC5B,qCAAqC;AAAA,IACrC,qCAAqC;AAAA,IACrC,kCAAkC;AAAA,IAClC,mCAAmC;AAAA,EACrC,GAAG;AAAA,IACD,cAAc;AAAA,IACd,WAAW;AAAA,IACX,cAAc;AAAA,IACd,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU;AAAA,EACZ,IAAI,kBAAkB,MAAM,SAAS,WAAW,OAAO,MAAM,OAAO,SAAS,gBAAgB,WAAW,KAAK,GAAG;AAAA,IAC9G,6BAA6B;AAAA,IAC7B,aAAa;AAAA,MACX,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,UAAU;AAAA;AAAA,IACZ;AAAA,EACF,GAAG,WAAW,YAAY,UAAU;AAAA,IAClC,iBAAiB,MAAM,SAAS,KAAK,QAAQ;AAAA,IAC7C,QAAQ,wBAAwB,MAAM,SAAS,UAAU,OAAO,SAAS,sBAAsB,WAAW,KAAK,EAAE;AAAA,EACnH,GAAG,WAAW,YAAY,WAAW;AAAA,IACnC,kBAAkB,wBAAwB,MAAM,SAAS,cAAc,OAAO,SAAS,sBAAsB,WAAW,KAAK,EAAE;AAAA,IAC/H,QAAQ,yBAAyB,MAAM,SAAS,UAAU,OAAO,SAAS,uBAAuB,WAAW,KAAK,EAAE;AAAA,EACrH,CAAC;AACH,GAAG,CAAC;AAAA,EACF;AACF,MAAM,WAAW,cAAc;AAAA,EAC7B,aAAa;AAAA,IACX,MAAM;AAAA,IACN,YAAY;AAAA,EACd;AACF,IAAI,IAAI,QAAQ,MAAM;AAAA;AAAA,yBAEG,CAAC;AAAA;AAAA;AAAA,YAGd,gBAAgB,GAAG,CAAC;AAAA,EAC9B;AAAA,EACA;AACF,MAAM;AACJ,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,eAAe;AAAA,IACjB;AAAA,IACA;AAAA,EACF,GAAG,CAAC,gBAAgB,QAAQ,CAAC;AAC7B,SAAO,SAAS,CAAC,GAAG,iBAAiB,UAAa;AAAA,IAChD,2BAA2B;AAAA,EAC7B,GAAG,WAAW,UAAa;AAAA,IACzB,8BAA8B;AAAA,EAChC,CAAC;AACH,CAAC;AAiBD,IAAM,iBAAoC,iBAAW,SAASC,gBAAe,SAAS,KAAK;AACzF,QAAM,QAAQ,cAAc;AAAA,IAC1B,OAAO;AAAA,IACP,MAAM;AAAA,EACR,CAAC;AACD,QAAM;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,UAAU;AAAA,IACV;AAAA,IACA,cAAc;AAAA,IACd,QAAQ,cAAc,IAAI;AAAA;AAAA,IAE1B;AAAA,IACA,QAAQ,CAAC;AAAA,IACT,YAAY,CAAC;AAAA,EACf,IAAI,OACJ,QAAQ,8BAA8B,OAAO,SAAS;AACxD,QAAM,aAAa,SAAS,CAAC,GAAG,OAAO;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc,QAAQ;AAAA,EACxB,CAAC;AACD,QAAM,UAAU,kBAAkB,UAAU;AAC5C,QAAM,yBAAyB,SAAS,CAAC,GAAG,OAAO;AAAA,IACjD;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,QAAM,CAAC,UAAU,SAAS,IAAI,QAAQ,QAAQ;AAAA,IAC5C;AAAA,IACA,WAAW,aAAK,QAAQ,MAAM,SAAS;AAAA,IACvC,aAAa;AAAA,IACb;AAAA,IACA;AAAA,IACA,iBAAiB,SAAS;AAAA,MACxB,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,OAAO,SAAS,CAAC,GAAG;AAAA,QAClB,4BAA4B;AAAA,MAC9B,GAAG,KAAK;AAAA,IACV,GAAG,OAAO,UAAU,YAAY,eAAe;AAAA,MAC7C,iBAAiB,KAAK,MAAM,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,CAAC;AACD,aAAoB,mBAAAC,KAAK,UAAU,SAAS,CAAC,GAAG,WAAW;AAAA,IACzD;AAAA,EACF,CAAC,CAAC;AACJ,CAAC;AACD,OAAwC,eAAe,YAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQxF,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA,EAIpB,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,OAAO,kBAAAA,QAAgD,UAAU,CAAC,kBAAAA,QAAU,MAAM,CAAC,UAAU,WAAW,WAAW,WAAW,SAAS,CAAC,GAAG,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAK5J,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrB,aAAa,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvB,MAAM,kBAAAA,QAAgD,UAAU,CAAC,kBAAAA,QAAU,MAAM,CAAC,MAAM,MAAM,IAAI,CAAC,GAAG,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvH,WAAW,kBAAAA,QAAU,MAAM;AAAA,IACzB,MAAM,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,MAAM,CAAC;AAAA,EAC9D,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKD,OAAO,kBAAAA,QAAU,MAAM;AAAA,IACrB,MAAM,kBAAAA,QAAU;AAAA,EAClB,CAAC;AAAA;AAAA;AAAA;AAAA,EAID,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA,EAIjB,IAAI,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,UAAU,CAAC,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,IAAI,CAAC,CAAC,GAAG,kBAAAA,QAAU,MAAM,kBAAAA,QAAU,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,EAItJ,WAAW,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOrB,OAAO,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjB,SAAS,kBAAAA,QAAgD,UAAU,CAAC,kBAAAA,QAAU,MAAM,CAAC,YAAY,SAAS,QAAQ,OAAO,CAAC,GAAG,kBAAAA,QAAU,MAAM,CAAC;AAChJ,IAAI;AACJ,IAAO,yBAAQ;",
  "names": ["init_esm", "LinearProgress", "_jsx", "PropTypes"]
}
